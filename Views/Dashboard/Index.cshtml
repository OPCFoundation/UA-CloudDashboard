
@using OpcUaWebDashboard.Properties;

@{
    ViewBag.Title = @Resources.Dashboard;
}

<div class="chart-container" width="600" height="400">
    <canvas id="myChart"></canvas>
</div>


@section scripts {
    <script src="~/lib/Chart.js/chart.js"></script>>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            var myChart = new Chart(document.getElementById('myChart'),
                {
                    type: 'line',
                    responsive: true,
                    options:
                    {
                        scales:
                        {
                            yAxes: [{
                                ticks:
                                {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

            // connection to SignalR hub
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/statusHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            // add dataset function
            connection.on("addDataSetToChart", function(name)
            {
                const data = myChart.data;
                const dsColor = Utils.namedColor(chart.data.datasets.length);
                
                const newDataset = {
                    label: name,
                    backgroundColor: Utils.transparentize(dsColor, 0.5),
                    borderColor: dsColor
                };
                
                chart.data.datasets.push(newDataset);
                
                chart.update();
            });

            // add data function
            connection.on("addDataToChart", function(dataset, label, value)
            {
                bool found = false;
                for (var i = 0; i < myChart.data.labels.length; i++)
                {
                    if (myChart.data.labels[i] == label)
                    {
                        found = true;
                        break;
                    }
                }
                
                if (!found)
                {
                    myChart.data.labels.push(label);
                }

                if (myChart.data.labels.length > 100)
                {
                    myChart.data.labels.shift();
                }
                
                break;
                
                for (var i = 0; i < myChart.data.datasets.length; i++)
                {
                    if (myChart.data.datasets[i].label == name)
                    {
                        myChart.data.datasets[i].data.push(value);
                        
                        if (myChart.data.datasets[i].data.length > 100)
                        {
                            myChart.data.datasets[i].data.shift();
                        }
                        
                        break;
                    }
                }
                
                myChart.update();
            });

            connection.start();
        });
    </script>
}
